--JOIN
--CARTESIAN PRODUCT 카디션 곱, 상호조인
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT *
FROM EMP A
CROSS JOIN DEPT B;

--INNER JOIN
SELECT E.EMPNO, E.ENAME, E.JOB, D.DNAME
FROM EMP E
INNER JOIN DEPT D
ON E.DEPTNO=D.DEPTNO
WHERE E.JOB='CLERK';

SELECT E.EMPNO, E.ENAME, E.JOB, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
AND E.JOB='CLERK';

--FULL OUTER JOIN
SELECT E.*,D.*
FROM EMP E
FULL OUTER JOIN DEPT D
        ON E.DEPTNO=D.DEPTNO;
        
--LEFT OUTER JOIN
SELECT E.*,D.*
FROM EMP E LEFT OUTER JOIN DEPT D --왼쪽집합 정보는 빠짐없이 모두포함(오른쪽 집합은 매칭값이 없으면 NULL)
        ON E.DEPTNO=D.DEPTNO;
        
--WHERE E.DEPTNO IS NULL;
SELECT E.*,D.*
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO(+);

--RIGHT OUTER JOIN
SELECT E.*, D.*
FROM EMP E RIGHT OUTER JOIN DEPT D --오른쪽집합은 정보는 빠짐없이 모두포함(왼쪽 집합은 매칭값이 없으면NULL)
        ON E.DEPTNO=D.DEPTNO;

SELECT E.*,D.*
FROM EMP E, DEPT D
WHERE E.DEPTNO(+)=D.DEPTNO;

--SELF JOIN
SELECT A.EMPNO, A.ENAME, A.JOB, A.MGR
        ,B.EMPNO, B.ENAME, B.JOB
FROM EMP A, EMP B
WHERE A.MGR=B.EMPNO;

/*
--SUB QUERY 서브쿼리
SELECT / FROM / WHERE
*/

---SELECT 결과가 반드시 단일 행 단일 값

SELECT E.ENAME
        ,(SELECT D.DNAME FROM DEPT D WHERE D.DEPTNO=E.DEPTNO) AS DEPTNAME
FROM EMP E
WHERE E.JOB='MANAGER';
--FROM INLINE VIEW
SELECT EMP_NAME, SALARY
FROM()
WHERE SALARY BET;

SELECT E.ENAME AS EMP_NAME
        ,E.SAL AS SALARY
        FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
AND D.DNAME='SALES';

--FROM INLINE VIEW 결과 반드시 하나의 테이블로 리턴
SELECT EMP_NAME,SALARY
FROM(SELECT E.ENAME AS EMP_NAME
        ,E.SAL AS SALARY
        FROM EMP E, DEPT D
        WHERE E.DEPTNO=D.DEPTNO
        AND D.DNAME='SALES')
WHERE SALARY BETWEEN 1000 AND 2000;

--WHERE 단일 행과 무관하게 단일 컬럼으로 리턴
SELECT * FROM DEPT D
WHERE D.DEPTNO IN (SELECT E.DEPTNO FROM EMP E WHERE E.SAL>2000);

SELECT ENAME, SAL FROM EMP
WHERE SAL>(SELECT AVG(SAL) FROM EMP);--평균 샐러리보다 높은

SELECT ENAME, SAL FROM EMP
WHERE SAL>ALL(SELECT SAL FROM EMP WHERE DEPTNO=30);--모든조건에 만족하는

SELECT ENAME, SAL FROM EMP
WHERE SAL>ANY(SELECT SAL FROM EMP WHERE DEPTNO=30);--어떤 하나라도 만족하는

SELECT D.DNAME
FROM DEPT D
WHERE EXISTS(SELECT E.ENAME
            FROM EMP E
            WHERE E.DEPTNO=D.DEPTNO
            AND E.SAL>3000);

SELECT D.DNAME
FROM DEPT D
WHERE NOT EXISTS(SELECT E.ENAME
            FROM EMP E
            WHERE E.DEPTNO=D.DEPTNO
            AND E.SAL>3000); 
            
--Q1 부서명 부서이름 사원번호 사원명 봉급
--사원의 봉급이 2000초과인 사원만
SELECT E.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E
JOIN DEPT D ON E.DEPTNO = D.DEPTNO
WHERE (E.SAL>2000);

--Q2 부서별
--부서코드 부서명 급여평균 최대급여 최소급여 부서인원수
SELECT E.DEPTNO, D.DNAME, TRUNC(AVG(E.SAL),2), MAX(E.SAL), MIN(E.SAL), COUNT(E.DEPTNO)
FROM  EMP E
JOIN DEPT D ON E.DEPTNO=D.DEPTNO
GROUP BY E.DEPTNO, D.DNAME;

--Q3 부서별 고용인의 정보
--부서코드 부서명 사원번호 이름 직급 봉급
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL 
FROM DEPT D
JOIN EMP E ON D.DEPTNO=E.DEPTNO
ORDER BY DEPTNO;

--2
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL 
FROM EMP E
RIGHT OUTER JOIN DEPT D ON E.DEPTNO=D.DEPTNO;
--3
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL 
FROM EMP E, DEPT D
WHERE E.DEPTNO(+)=D.DEPTNO
ORDER BY D.DEPTNO DESC, E.ENAME ASC;

--Q4 부서별
--부서코드 부서명 사번 사원명 관리자사번 관리자명
--급여 해당사원의 급여등급 등급최저급여 등급최고급여

--1

SELECT  
D.DEPTNO,
D.DNAME, 
A.EMPNO, 
A.ENAME,
A.MGR,
B.ENAME AS MANAGER, 
A.SAL,
S.GRADE, 
S.LOSAL, 
S.HISAL
FROM EMP A
RIGHT OUTER JOIN DEPT D ON A.DEPTNO=D.DEPTNO
LEFT OUTER JOIN EMP B ON A.MGR=B.ENAME
LEFT OUTER JOIN SALGRADE S ON A.SAL BETWEEN S.LOSAL AND S.HISAL
ORDER BY D.DEPTNO, A.EMPNO;


--2

SELECT D.DEPTNO
, D.DNAME
, A.EMPNO
, A.ENAME
, A.MGR
, B.ENAME AS MANAGER
, A.SAL
, S.GRADE
, S.LOSAL
, S.HISAL
FROM EMP A, DEPT D, EMP B, SALGRADE S
WHERE A.DEPTNO(+)=D.DEPTNO
AND A.MGR=B.ENAME(+)
AND A.SAL BETWEEN S.LOSAL(+) AND S.HISAL(+)
ORDER BY D.DEPTNO, A.EMPNO;


--3
SELECT R1.DEPTNO, R1.DNAME, R1.EMPNO, R1.ENAME, R1.MGR, R1.MGRNAME, R1.SAL, S.GRADE ,S. LOSAL, S.HISAL FROM
(
    SELECT R0.DEPTNO, R0.DNAME, R0.EMPNO, R0.ENAME, R0.MGR, E1.ENAME AS MGRNAME,  R0.SAL FROM
    (
        SELECT D0.DEPTNO, D0.DNAME, E0.EMPNO, E0.ENAME, E0.MGR, E0.SAL FROM DEPT D0
        LEFT OUTER JOIN EMP E0 ON D0.DEPTNO=E0.DEPTNO
        ORDER BY D0.DEPTNO, E0.ENAME
    ) R0
    LEFT OUTER JOIN EMP E1 ON R0.MGR=E1.EMPNO
) R1
LEFT OUTER JOIN SALGRADE S ON(R1.SAL BETWEEN S.LOSAL AND S.HISAL)
ORDER BY R1.DEPTNO, R1.EMPNO
;

/*
        VIEW
        WITH
        별칭 AS SELECT....
        
        SELECT
        FROM 별칭
*/
SELECT E10.EMPNO, E10.ENAME, E10.DEPTNO, D.DNAME, D.LOC 
        FROM (SELECT * FROM EMP WHERE DEPTNO=10) E10 --INLINE VIEW
                , (SELECT * FROM DEPT) D
WHERE E10.DEPTNO=D.DEPTNO;



WITH--VIEW
E10 AS (SELECT * FROM EMP WHERE DEPTNO=10),
D AS (SELECT * FROM DEPT)
SELECT E10.EMPNO, E10.ENAME, E10.DEPTNO, D.DNAME, D.LOC
FROM E10, D
WHERE E10.DEPTNO=D.DEPTNO;

--Q1 ALLEN 사원의 직급과 동일한 사원들의
--직급 사번 사원명 봉급 부서코드 부서명(USING THE VIEW)
WITH
A AS (SELECT * FROM EMP),
B AS (SELECT * FROM DEPT),
C AS (SELECT * FROM EMP WHERE ENAME='ALLEN')
SELECT A.JOB, A.EMPNO, A.ENAME, A.SAL, A.DEPTNO, B.DNAME
FROM A, B, C
WHERE A.DEPTNO=B.DEPTNO
AND A.JOB=C.JOB;


SELECT E10.EMPNO, E10.ENAME, E10.DEPTNO, D.DNAME, D.LOC 
        FROM EMP E10, DEPT D
WHERE E10.DEPTNO=D.DEPTNO;

--Q2 전체 평균 급여보다 많이 받는 사원의
--사번 사원명 입사일 부서명 부서위치 급여 급여등급
WITH
A AS(SELECT * FROM EMP ),
B AS(SELECT * FROM DEPT ), 
C AS(SELECT * FROM SALGRADE)
SELECT A.EMPNO, A.ENAME, TO_CHAR(A.HIREDATE, 'YYYY-MM-DD'), B.DNAME, B.LOC, A.SAL, C.GRADE
FROM A,B,C
WHERE A.DEPTNO=B.DEPTNO 
AND A.SAL>= C.LOSAL AND A.SAL<=C.HISAL
AND A.SAL>(SELECT AVG(SAL) FROM EMP)
ORDER BY A.SAL DESC, A.ENAME;

--Q3 10번 부서의 인원 중 30번 부서에 없는 직급을 가진 직원의
--사번 사원명 직급 부서코드 부서명 부서위치
SELECT E.EMPNO, E.ENAME, E.JOB, E.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
AND E.DEPTNO=10
AND NOT E.JOB IN(SELECT DISTINCT E.JOB FROM EMP E WHERE E.DEPTNO =30)--1
;

SELECT E.EMPNO, E.ENAME, E.JOB, E.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
AND E.DEPTNO=10
AND E.JOB <> ALL(SELECT DISTINCT E.JOB FROM EMP E WHERE E.DEPTNO =30)--2
;


--Q4 SALESMAN 의 최대급여보다 많이 급여를 받는 사람들의
--사번 사원명 급여 급여등급
SELECT E.EMPNO, E.ENAME, E.SAL, S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL>=S.LOSAL AND E.SAL<=S.HISAL
AND E.JOB='SALESMAN'
AND E.SAL>ALL(SELECT E.SAL FROM EMP E WHERE E.JOB='SALESMAN');--1

SELECT E.EMPNO, E.ENAME, E.SAL, S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL>=S.LOSAL AND E.SAL<=S.HISAL
AND E.SAL>(SELECT MAX(E.SAL) FROM EMP E WHERE E.JOB='SALESMAN');--2




-- 1. DEPT 테이블과 EMP 테이블에서 사번, 사원명, 부서코드, 부서명을 검색하시오. (사원명 오름차순 정렬)
SELECT E.EMPNO, E.ENAME, E.DEPTNO, D.DNAME
FROM EMP E
JOIN DEPT D ON E.DEPTNO=D.DEPTNO
ORDER BY E.ENAME;

-- 2. DEPT 테이블과 EMP 테이블에서 사번, 사원명, 급여, 부서명을 검색하시오. 단, 급여가 2000 이상인 사원에 대하여 급여기준으로 내림차순 정렬할 것.
SELECT E.EMPNO, E.ENAME, E.SAL, D.DNAME
FROM EMP E
JOIN DEPT D ON E.DEPTNO=D.DEPTNO
WHERE (E.SAL>2000)
ORDER BY E.SAL DESC;

-- 3. DEPT 테이블과 EMP 테이블에서 사번, 사원명, 업무, 급여, 부서명을 검색하시오. 단, 업무가 MANAGER이며 급여가 2500 이상인 사원에 대해, 사번을 기준으로 오름차순 정렬할 것.
SELECT E.EMPNO, E.ENAME, E.JOB, E.SAL, D.DNAME
FROM EMP E
JOIN DEPT D ON E.DEPTNO=D.DEPTNO AND  E.JOB='MANAGER' AND E.SAL>=2500
ORDER BY E.EMPNO;


-- 4. EMP 테이블과 SALGRADE 테이블에서 사번, 사원명, 급여, 등급을 검색하시오. 단, 등급은 급여가  LOSAL과 HISAL 범위에 포함되고 등급이 4이며 급여를 기준으로 내림차순 정렬할 것.
SELECT E.EMPNO, E.ENAME, E.SAL FROM EMP E
JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL AND S.GRADE=4
ORDER BY E.SAL DESC;

-- 5. DEPT 테이블, EMP 테이블, SALGRADE 테이블에서 사번, 사원명, 부서명, 급여, 등급을 검색하시오. 단, 등급은 급여가 LOSAL과 HISAL 범위에 포함되며 등급을 기준으로 내림차순 정렬할 것.
SELECT E.EMPNO, E.ENAME, D.DNAME, E.SAL, S.GRADE FROM EMP E
JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL
JOIN DEPT D ON E.DEPTNO=D.DEPTNO
ORDER BY S.GRADE DESC;

-- 6. EMP 테이블에서 사원명과 해당 사원의 관리자명을 검색하시오.
SELECT E.ENAME, E.MGR,  B.ENAME AS MANAGER
FROM EMP E
JOIN EMP B ON E.MGR=B.EMPNO;


-- 7. EMP 테이블에서 사원명과 해당 사원의 관리자명, 해당 사원의 관리자의 관리자명을 검색하시오.
SELECT A.ENAME, A.MGR,  B.ENAME AS MANAGER, B.MGR, C.ENAME AS UPPERMANAGER
FROM EMP A
JOIN EMP B ON A.MGR=B.EMPNO
JOIN EMP C ON B.MGR=C.EMPNO;


-- 8. 7번 결과에서 상위 관리자가 없는 모든 사원의 이름도 사원명에 출력되도록 수정하시오.
SELECT A.ENAME, A.MGR,  B.ENAME AS MANAGER, B.MGR, C.ENAME AS UPPERMANAGER
FROM EMP A
JOIN EMP B ON A.MGR=B.EMPNO
LEFT JOIN EMP C ON B.MGR=C.EMPNO;

-- 9.문제 : '부서별 최소 급여' 중에서 '30번 부서의 최소급여'보다는      큰 최소급여인 부서의 부서번호, 최소 급여를 출력하라
SELECT A.DEPTNO, A.SAL
FROM EMP A
GROUP BY A.DEPTNO, A.SAL;



--SELECT E.DEPTNO, MIN(E.SAL)
--FROM EMP E
--GROUP BY E.DEPTNO
--HAVING MIN(E.SAL)>(SELECT MIN(N.SAL)
--FROM EMP N
--GROUP BY N.DEPTNO
--HAVING N.DEPTNO=30);




--AND (SELECT MIN(SAL) FROM EMP GROUP BY DEPTNO);



-- 10.문제 : 'job이 CLERK' 인 사원이 '2명 이상 있는 부서'의 부서번호, 부서명을 출력하라




--12.문제 : job 이 'CLERK' 인 사원이 한명이라도 있는 부서의 부서명만 출력하라

--13.문제 : 각 부서별로 최소 급여를 받는 사원의 부서번호, 부서명, 사번, 이름, 급여를 출력하라

--14.문제 : 직속상사가 없는 사원을 포함해서 부하직원사번, 부하직원명, 직속상사사번, 직속상사명을  출력하라

--15.문제 : 평균 급여보다 많거나 같고 최대 급여보다는 적은 급여를 받는 사원의 사번, 이름, 급여를 출력하라

--16.문제 : 월급이 높은 순으로 사번, 이름, 월급을 상위 5명만 출력하라




